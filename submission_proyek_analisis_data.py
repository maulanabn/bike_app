# -*- coding: utf-8 -*-
"""Submission Proyek Analisis Data

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qYnjS_caF4Nz08hylKNCyzK5oA1amYPu

# Proyek Analisis Data: Bike Sharing Dataset
- Nama: Baharuddin Nur Maulana
- Email: foerza99@gmail.com
- Id Dicoding:maulbn99

## Menentukan Pertanyaan Bisnis

- Bagaimana tren penggunaan bike sharing per tahun, bulan dan jam?
- Bagaimana hari libur berdampak pada pengguna bike sharing?
- Bagaimana hari kerja mempengaruhi pengguna bike sharing?

## Menyiapkan semua library yang dibutuhkan
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

"""## Data Wrangling

### Gathering Data
"""

day_df = pd.read_csv("/content/day.csv")
hour_df = pd.read_csv("/content/hour.csv")

day_df.head()

hour_df.head()

"""### Assessing Data

Pengecekan Type Data
"""

day_df.info()

hour_df.info()

"""Bedasarkan pengecekan type data dari dataset tersebut, terdapat kesalahan type data pada dataset `day_df` dan `hour_df`. Kesalahan type data tersebut terdapat pada kolom `dteday` yang menampilkan type data `object`, dimana seharusnya menunjukkan type data `datetime`

Pengecekan missing value
"""

day_df.isna().sum()

hour_df.isna().sum()

"""Bedasarkan pengecekan missing value dari dataset `day_df` dan `hour_df`, kedua dataset tersebut tidak memiliki data yang hilang atau kosong.

Pengecekan duplicate data
"""

print("Total duplicate dataset day :", day_df.duplicated().sum())

print("Total duplicate dataset hour :", hour_df.duplicated().sum())

"""Bedasarkan pengecekan duplicate data dari dataset `day_df` dan `hour_df`, kedua dataset tersebut tidak memiliki duplikasi data.

Pengecekan Descriptive Statistics
"""

day_df.describe()

hour_df.describe()

"""Bedasarkan pengecekan Descriptive Statistics dari dataset `day_df` dan `hour_df`, kedua dataset tersebut memberikan gambaran mengenai distribusi dan perilaku data sampel dengan melihat nilai minimum, nilai maximum,nilai mean dan standar deviasi.

### Cleaning Data

Melakukan perbaikan type data pada dataset `day_df` dan `hour_df`
"""

day_df["dteday"] = pd.to_datetime(day_df["dteday"])

hour_df["dteday"] = pd.to_datetime(hour_df["dteday"])

day_df.info()

hour_df.info()

"""Bedasarkan informasi dari dataset `day_df` dan `hour_df` yang ditampilkan, kedua dataset telah berhasil dilakukan perbaikan type data tepatnya pada kolom `dteday` dari yang awalnya merupakan type data  `object` menjadi type data `datetime`

## Exploratory Data Analysis (EDA)

## Explore `day_df`
"""

day_df.sample(5)

day_df.describe(include="all")

"""Group by Year"""

day_df.groupby(by="yr").agg({
    "instant": "nunique",
    "cnt": ["max", "min", "mean", "std", ]
})

day_df.loc[day_df["yr"] == 0, "yr"] = "2011"
day_df.loc[day_df["yr"] == 1, "yr"] = "2012"

day_df.yr.value_counts().sort_index()

"""Group by Month"""

day_df.groupby(by="mnth").agg({
    "instant": "nunique",
    "cnt": ["max", "min", "mean", "std", ]
})

day_df.mnth.value_counts().sort_index()

"""Group by Holiday"""

day_df.groupby(by="holiday").agg({
    "instant": "nunique",
    "cnt": ["max", "min", "mean", "std", ]
})

day_df.loc[day_df["holiday"] == 0, "holiday"] = "Holiday"
day_df.loc[day_df["holiday"] == 1, "holiday"] = "Not a Holiday"

day_df.holiday.value_counts().sort_index()

"""Group by Weekday"""

day_df.groupby(by="weekday").agg({
    "instant": "nunique",
    "cnt": ["max", "min", "mean", "std", ]
})

day_df.loc[day_df["weekday"] == 0, "weekday"] = "Sunday"
day_df.loc[day_df["weekday"] == 1, "weekday"] = "Monday"
day_df.loc[day_df["weekday"] == 2, "weekday"] = "Tuesday"
day_df.loc[day_df["weekday"] == 3, "weekday"] = "Wednesday"
day_df.loc[day_df["weekday"] == 4, "weekday"] = "Thursday"
day_df.loc[day_df["weekday"] == 5, "weekday"] = "Friday"
day_df.loc[day_df["weekday"] == 6, "weekday"] = "Saturday"

day_df.weekday.value_counts().sort_index()

"""Group by Workingday"""

day_df.groupby(by="workingday").agg({
    "instant": "nunique",
    "cnt": ["max", "min", "mean", "std", ]
})

day_df.loc[day_df["workingday"] == 0, "workingday"] = "Holiday"
day_df.loc[day_df["workingday"] == 1, "workingday"] = "Working Day"

day_df.workingday.value_counts().sort_index()

"""Group by Weathersit"""

day_df.groupby(by="weathersit").agg({
    "instant": "nunique",
    "cnt": ["max", "min", "mean", "std", ]
})

day_df.loc[day_df["weathersit"] == 1, "weathersit"] = "Clear"
day_df.loc[day_df["weathersit"] == 2, "weathersit"] = "Mist + Cloudy"
day_df.loc[day_df["weathersit"] == 3, "weathersit"] = "Light Snow"
day_df.loc[day_df["weathersit"] == 4, "weathersit"] = "Heavy Rain"

day_df.weathersit.value_counts().sort_index()

import plotly.express as px
correlation_matrix = day_df.corr()
fig = px.imshow(correlation_matrix)
fig.update_layout(title="Korelasi Variabel Numerik")
fig.show()

cols_categorical = ['season', 'yr', 'mnth', 'holiday', 'weekday', 'workingday', 'weathersit']
for col in cols_categorical:
    fig = px.bar(day_df[col].value_counts().reset_index(), x='index', y=col)
    fig.update_layout(title=f'Distribusi {col}')
    fig.show()

"""## Explore `hour_df`"""

hour_df.sample(5)

hour_df.describe(include="all")

"""Group by Hour"""

hour_df.groupby(by="hr").agg({
    "instant": "nunique",
    "cnt": ["max", "min", "mean", "std", ]
})

hour_df.hr.value_counts().sort_index()

hour_df.loc[hour_df["weathersit"] == 1, "weathersit"] = "Clear"
hour_df.loc[hour_df["weathersit"] == 2, "weathersit"] = "Mist + Cloudy"
hour_df.loc[hour_df["weathersit"] == 3, "weathersit"] = "Light Snow"
hour_df.loc[hour_df["weathersit"] == 4, "weathersit"] = "Heavy Rain"

hour_df.weathersit.value_counts().sort_index()

"""## Visualization & Explanatory Analysis

## Bagaimana tren penggunaan bike sharing per tahun, bulan dan jam?

Year
"""

df_year = day_df.groupby(by="yr").instant.nunique().reset_index()
df_year.rename(columns={ "instant": "sum" }, inplace=True)
df_year

plt.figure(figsize=(8, 5))
sns.barplot( y="sum", x="yr",
    data=df_year.sort_values(by="yr", ascending=False),
)
plt.title("Tren Bike Sharing by Year", loc="center", fontsize=14)
plt.tick_params(axis="x", labelsize=10)
plt.show()

"""Month"""

plt.figure(figsize=(8, 5))
sns.barplot( y="cnt", x="mnth",
    data=day_df.sort_values(by="mnth", ascending=False),
)
plt.title("Tren Bike Sharing by Month", loc="center", fontsize=14)
plt.tick_params(axis="x", labelsize=10)
plt.show()

"""Hour"""

plt.figure(figsize=(8, 5))
sns.barplot( y="cnt", x="hr",
    data=hour_df.sort_values(by="hr", ascending=False),
)
plt.title("Tren Bike Sharing by Hour", loc="center", fontsize=14)
plt.tick_params(axis="x", labelsize=10)
plt.show()

"""## Bagaimana hari libur berdampak pada pengguna bike sharing?"""

df_holiday = day_df.groupby(by="holiday").instant.nunique().reset_index()
df_holiday.rename(columns={
    "instant": "sum" }, inplace=True)
df_holiday

plt.figure(figsize=(8, 5))
sns.barplot( y="cnt", x="hr",
    data=hour_df.sort_values(by="hr", ascending=False),
)
plt.title("Tren Bike Sharing by Holiday", loc="center", fontsize=14)
plt.tick_params(axis="x", labelsize=10)
plt.show()

"""## Bagaimana hari kerja mempengaruhi pengguna bike sharing?"""

df_working = day_df.groupby(by="workingday").instant.nunique().reset_index()
df_working.rename(columns={
    "instant": "sum" }, inplace=True)
df_working

plt.figure(figsize=(8, 5))
sns.barplot( y="sum", x="workingday",
    data=df_working.sort_values(by="workingday", ascending=False),
)
plt.title("Tren Bike Sharing by Workingday", loc="center", fontsize=14)
plt.tick_params(axis="x", labelsize=10)
plt.show()

"""## Conclusion

- Conclusion pertanyaan : Bagaimana tren penggunaan bike sharing per tahun, bulan dan jam?

  1) Berdasarkan hasil Visualization & Explanatory Analysis pada tren penggunaan bike sharing pertahun, dapat disimpulkan bahwa tren penggunaan bike sharing terbanyak terjadi pada tahun 2012. Hal tersebut dibuktikan dengan hasil visualisasi berupa kolom perbandingan tahun dan jumlah serta visualisasi berupa grafik yang menunjukkan selisih 1 angka lebih tinggi penggunaan bike sharing pada tahun 2012 dibandingkan tahun 2011.
  
  2) Berdasarkan hasil Visualization & Explanatory Analysis pada tren penggunaan bike sharing perbulan, dapat disimpulkan bahwa tren penggunaan bike sharing terbanyak terjadi pada bulan ke-9. Hal tersebut dibuktikan dengan hasil visualisasi berupa grafik yang menunjukkan jumlah total sepeda sewaan (cnt) pada bulan ke-9 melebihi 6000 cnt. Dimana bulan ke-9 tersebut menunjukkan nilai cnt yang paling tinggi dibandingkan bulan - bulan yang lain.

  3) Berdasarkan hasil Visualization & Explanatory Analysis pada tren penggunaan bike sharing perjam, dapat disimpulkan bahwa tren penggunaan bike sharing terbanyak terjadi pada jam ke-17. Hal tersebut dibuktikan dengan hasil visualisasi berupa grafik yang menunjukkan jumlah total sepeda sewaan (cnt) pada jam ke-17 mendekati angka 500 cnt. Dimana jam ke-17 tersebut menunjukkan nilai cnt yang paling tinggi dibandingkan jam - jam yang lain.

- Conclusion pertanyaan : Bagaimana hari libur berdampak pada pengguna bike sharing?

  Berdasarkan hasil Visualization & Explanatory Analysis penggunaan bike sharing berdampak pada hari libur, dapat disimpulkan bahwa tren penggunaan bike sharing terbanyak terjadi pada pada hari libur jika dibandingkan pada bukan hari libur. Hal tersebut dibuktikan dengan hasil visualisasi berupa kolom jumlah perbandingan hari libur dan bukan hari libur serta visualisasi berupa grafik yang menunjukkan hari libur sangat berdampak dan berpengaruh pada penggunaan bike sharing


- Conclusion pertanyaan : Bagaimana hari kerja mempengaruhi pengguna bike sharing?
  
  Berdasarkan hasil Visualization & Explanatory Analysis penggunaan bike sharing mempengaruhi pada hari kerja, dapat disimpulkan bahwa tren penggunaan bike sharing terbanyak terjadi pada pada hari kerja jika dibandingkan pada hari libur. Hal tersebut dibuktikan dengan hasil visualisasi berupa kolom jumlah perbandingan hari libur dan hari kerja serta visualisasi berupa grafik yang menunjukkan hari kerja berpengaruh pada penggunaan bike sharing
"""